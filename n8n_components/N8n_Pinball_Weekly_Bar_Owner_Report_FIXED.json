{
  "name": "Pinball Weekly Bar Owner Report",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 9 * * 1"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [240, 300],
      "name": "Every Monday at 9 AM",
      "id": "weekly-trigger-001"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Weekly Summary Stats\nWITH week_data AS (\n  SELECT \n    COUNT(DISTINCT player_id) as active_players_this_week,\n    COUNT(*) as scores_set_this_week,\n    COUNT(DISTINCT machine_id) as machines_played_this_week,\n    COUNT(DISTINCT DATE(date_set)) as days_with_activity\n  FROM High_Scores_Archive\n  WHERE date_set >= CURRENT_DATE - INTERVAL '7 days'\n),\nlast_week_data AS (\n  SELECT \n    COUNT(DISTINCT player_id) as active_players_last_week,\n    COUNT(*) as scores_set_last_week\n  FROM High_Scores_Archive\n  WHERE date_set >= CURRENT_DATE - INTERVAL '14 days'\n    AND date_set < CURRENT_DATE - INTERVAL '7 days'\n),\ntotal_data AS (\n  SELECT \n    COUNT(DISTINCT player_id) as total_players_ever,\n    COUNT(*) as total_scores_ever,\n    MIN(date_set) as first_score_date\n  FROM High_Scores_Archive\n),\nnew_players AS (\n  SELECT COUNT(DISTINCT player_id) as new_players_this_week\n  FROM Players\n  WHERE last_seen >= CURRENT_DATE - INTERVAL '7 days'\n    AND player_id NOT IN (\n      SELECT DISTINCT player_id \n      FROM High_Scores_Archive \n      WHERE date_set < CURRENT_DATE - INTERVAL '7 days'\n    )\n),\nevent_info AS (\n  SELECT event_name, start_date, stop_date\n  FROM Events\n  WHERE is_active = true\n  LIMIT 1\n)\nSELECT \n  w.*,\n  lw.active_players_last_week,\n  lw.scores_set_last_week,\n  t.total_players_ever,\n  t.total_scores_ever,\n  t.first_score_date,\n  np.new_players_this_week,\n  e.event_name,\n  e.start_date as event_start,\n  e.stop_date as event_end,\n  CURRENT_DATE - INTERVAL '7 days' as report_start_date,\n  CURRENT_DATE as report_end_date,\n  -- Calculate growth percentages\n  CASE \n    WHEN lw.active_players_last_week > 0 \n    THEN ROUND(((w.active_players_this_week - lw.active_players_last_week)::numeric / lw.active_players_last_week * 100), 1)\n    ELSE 0 \n  END as player_growth_pct,\n  CASE \n    WHEN lw.scores_set_last_week > 0 \n    THEN ROUND(((w.scores_set_this_week - lw.scores_set_last_week)::numeric / lw.scores_set_last_week * 100), 1)\n    ELSE 0 \n  END as activity_growth_pct\nFROM week_data w\nCROSS JOIN last_week_data lw\nCROSS JOIN total_data t\nCROSS JOIN new_players np\nCROSS JOIN event_info e;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [460, 300],
      "name": "Get Weekly Stats",
      "id": "weekly-stats-001",
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Top 10 Most Active Players This Week\nSELECT \n  p.display_name,\n  COUNT(*) as scores_set,\n  COUNT(DISTINCT h.machine_id) as machines_played,\n  MAX(h.high_score) as highest_score_this_week,\n  l.current_rank as current_leaderboard_rank\nFROM High_Scores_Archive h\nJOIN Players p ON h.player_id = p.player_id\nLEFT JOIN Leaderboard_Cache l ON h.player_id = l.player_id\nWHERE h.date_set >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY p.display_name, l.current_rank\nORDER BY scores_set DESC, machines_played DESC\nLIMIT 10;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [680, 200],
      "name": "Get Top Active Players",
      "id": "weekly-active-001",
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Most Popular Machines This Week\nSELECT \n  m.machine_name,\n  COUNT(*) as plays_this_week,\n  COUNT(DISTINCT h.player_id) as unique_players,\n  MAX(h.high_score) as highest_score\nFROM High_Scores_Archive h\nJOIN Machines m ON h.machine_id = m.machine_id\nWHERE h.date_set >= CURRENT_DATE - INTERVAL '7 days'\nGROUP BY m.machine_name\nORDER BY plays_this_week DESC\nLIMIT 5;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [680, 300],
      "name": "Get Popular Machines",
      "id": "weekly-machines-001",
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Current Top 10 Leaderboard\nSELECT \n  p.display_name,\n  l.combined_score,\n  l.current_rank,\n  -- Check if they played this week\n  CASE \n    WHEN EXISTS (\n      SELECT 1 FROM High_Scores_Archive h2 \n      WHERE h2.player_id = p.player_id \n      AND h2.date_set >= CURRENT_DATE - INTERVAL '7 days'\n    ) THEN true\n    ELSE false\n  END as active_this_week\nFROM Leaderboard_Cache l\nJOIN Players p ON l.player_id = p.player_id\nORDER BY l.current_rank ASC\nLIMIT 10;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [680, 400],
      "name": "Get Current Leaderboard",
      "id": "weekly-leaderboard-001",
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "-- Biggest Movers (Rank Changes)\nWITH current_ranks AS (\n  SELECT player_id, current_rank, combined_score\n  FROM Leaderboard_Cache\n),\nlast_week_ranks AS (\n  SELECT DISTINCT ON (player_id)\n    player_id, current_rank as rank_last_week\n  FROM Leaderboard_History\n  WHERE recorded_at <= CURRENT_DATE - INTERVAL '7 days'\n  ORDER BY player_id, recorded_at DESC\n)\nSELECT \n  p.display_name,\n  c.current_rank,\n  COALESCE(lw.rank_last_week, 999) as rank_last_week,\n  COALESCE(lw.rank_last_week, 999) - c.current_rank as positions_gained,\n  c.combined_score\nFROM current_ranks c\nJOIN Players p ON c.player_id = p.player_id\nLEFT JOIN last_week_ranks lw ON c.player_id = lw.player_id\nWHERE (COALESCE(lw.rank_last_week, 999) - c.current_rank) > 0\nORDER BY positions_gained DESC\nLIMIT 5;",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [680, 500],
      "name": "Get Biggest Movers",
      "id": "weekly-movers-001",
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [900, 250],
      "name": "Merge 1-2",
      "id": "merge-12-001"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [900, 450],
      "name": "Merge 3-4",
      "id": "merge-34-001"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3,
      "position": [1100, 350],
      "name": "Merge All",
      "id": "merge-all-001"
    },
    {
      "parameters": {
        "jsCode": "// Build comprehensive bar owner email\nconst stats = $('Get Weekly Stats').first().json;\nconst topActive = $('Get Top Active Players').all();\nconst popularMachines = $('Get Popular Machines').all();\nconst leaderboard = $('Get Current Leaderboard').all();\nconst movers = $('Get Biggest Movers').all();\n\nconst reportStart = new Date(stats.report_start_date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\nconst reportEnd = new Date(stats.report_end_date).toLocaleDateString('en-US', { month: 'short', day: 'numeric', year: 'numeric' });\n\n// Growth indicators\nconst playerGrowthEmoji = stats.player_growth_pct > 0 ? '📈' : stats.player_growth_pct < 0 ? '📉' : '➡️';\nconst activityGrowthEmoji = stats.activity_growth_pct > 0 ? '📈' : stats.activity_growth_pct < 0 ? '📉' : '➡️';\n\n// Build top active players table\nlet activePlayersTable = '';\nif (topActive.length > 0) {\n  topActive.forEach((player, idx) => {\n    const medal = idx === 0 ? '🥇' : idx === 1 ? '🥈' : idx === 2 ? '🥉' : `${idx + 1}.`;\n    activePlayersTable += `\n      <tr>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${medal}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${player.json.display_name}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">${player.json.scores_set}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">${player.json.machines_played}</td>\n      </tr>\n    `;\n  });\n} else {\n  activePlayersTable = '<tr><td colspan=\"4\" style=\"padding: 8px;\">No activity this week</td></tr>';\n}\n\n// Build popular machines table\nlet machinesTable = '';\nif (popularMachines.length > 0) {\n  popularMachines.forEach((machine, idx) => {\n    const fire = idx === 0 ? '🔥 ' : '';\n    machinesTable += `\n      <tr>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${fire}${machine.json.machine_name}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">${machine.json.plays_this_week}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">${machine.json.unique_players}</td>\n      </tr>\n    `;\n  });\n}\n\n// Build current leaderboard table\nlet leaderboardTable = '';\nif (leaderboard.length > 0) {\n  leaderboard.forEach((player, idx) => {\n    const medal = idx === 0 ? '🥇' : idx === 1 ? '🥈' : idx === 2 ? '🥉' : `${player.json.current_rank}.`;\n    const activeIcon = player.json.active_this_week ? '🟢' : '';\n    leaderboardTable += `\n      <tr>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${medal}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${player.json.display_name} ${activeIcon}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: right;\">${player.json.combined_score.toLocaleString()}</td>\n      </tr>\n    `;\n  });\n}\n\n// Build biggest movers section\nlet moversSection = '';\nif (movers.length > 0) {\n  let moversTable = '';\n  movers.forEach((mover) => {\n    moversTable += `\n      <tr>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd;\">${mover.json.display_name}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">🚀 +${mover.json.positions_gained}</td>\n        <td style=\"padding: 8px; border-bottom: 1px solid #ddd; text-align: center;\">#${mover.json.current_rank}</td>\n      </tr>\n    `;\n  });\n  moversSection = `\n    <h2>🚀 Biggest Movers This Week</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>Player</th>\n          <th style=\"text-align: center;\">Positions Gained</th>\n          <th style=\"text-align: center;\">Current Rank</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${moversTable}\n      </tbody>\n    </table>\n  `;\n}\n\n// Calculate estimated plays per day\nconst playsPerDay = stats.days_with_activity > 0 ? Math.round(stats.scores_set_this_week / stats.days_with_activity) : 0;\n\n// Revenue estimation (assuming $1 per play)\nconst estimatedRevenue = stats.scores_set_this_week;\n\nconst htmlBody = `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <style>\n    body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n    .container { max-width: 700px; margin: 0 auto; padding: 20px; }\n    .header { background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 8px; text-align: center; }\n    .kpi-grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 15px; margin: 20px 0; }\n    .kpi-box { background: #f8f9fa; padding: 20px; border-radius: 8px; border-left: 4px solid #667eea; }\n    .kpi-label { font-size: 12px; color: #666; text-transform: uppercase; margin-bottom: 5px; }\n    .kpi-value { font-size: 32px; font-weight: bold; color: #333; }\n    .kpi-subtext { font-size: 14px; color: #666; margin-top: 5px; }\n    .highlight-box { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 20px 0; border-radius: 4px; }\n    table { width: 100%; border-collapse: collapse; margin: 15px 0; }\n    th { background: #667eea; color: white; padding: 12px; text-align: left; }\n    .footer { text-align: center; color: #999; font-size: 12px; margin-top: 30px; padding-top: 20px; border-top: 1px solid #ddd; }\n    .emoji-large { font-size: 48px; margin: 10px 0; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <div class=\"header\">\n      <div class=\"emoji-large\">🎮</div>\n      <h1>Weekly Pinball Report</h1>\n      <p style=\"font-size: 18px; margin: 5px 0;\">${reportStart} - ${reportEnd}</p>\n      <p style=\"opacity: 0.9;\">${stats.event_name}</p>\n    </div>\n    \n    <h2>📊 Weekly Performance</h2>\n    <div class=\"kpi-grid\">\n      <div class=\"kpi-box\">\n        <div class=\"kpi-label\">Active Players</div>\n        <div class=\"kpi-value\">${stats.active_players_this_week}</div>\n        <div class=\"kpi-subtext\">${playerGrowthEmoji} ${Math.abs(stats.player_growth_pct)}% vs last week</div>\n      </div>\n      <div class=\"kpi-box\">\n        <div class=\"kpi-label\">High Scores Set</div>\n        <div class=\"kpi-value\">${stats.scores_set_this_week}</div>\n        <div class=\"kpi-subtext\">${activityGrowthEmoji} ${Math.abs(stats.activity_growth_pct)}% vs last week</div>\n      </div>\n      <div class=\"kpi-box\">\n        <div class=\"kpi-label\">New Players</div>\n        <div class=\"kpi-value\">${stats.new_players_this_week}</div>\n        <div class=\"kpi-subtext\">First-time competitors</div>\n      </div>\n      <div class=\"kpi-box\">\n        <div class=\"kpi-label\">Avg Daily Activity</div>\n        <div class=\"kpi-value\">${playsPerDay}</div>\n        <div class=\"kpi-subtext\">Plays per day</div>\n      </div>\n    </div>\n\n    <div class=\"highlight-box\">\n      <strong>💰 Estimated Revenue Impact:</strong> $${estimatedRevenue.toLocaleString()} \n      (${stats.scores_set_this_week} plays × $1/play)\n      <br><small>Actual revenue may vary based on pricing and free plays</small>\n    </div>\n    \n    <h2>🏆 Top 10 Most Active Players</h2>\n    <p style=\"color: #666; margin-top: -10px;\">Players setting the most high scores this week</p>\n    <table>\n      <thead>\n        <tr>\n          <th style=\"width: 50px;\">Rank</th>\n          <th>Player</th>\n          <th style=\"text-align: center; width: 100px;\">Scores Set</th>\n          <th style=\"text-align: center; width: 100px;\">Machines</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${activePlayersTable}\n      </tbody>\n    </table>\n    \n    <h2>🔥 Most Popular Machines</h2>\n    <p style=\"color: #666; margin-top: -10px;\">Which games are getting the most action</p>\n    <table>\n      <thead>\n        <tr>\n          <th>Machine</th>\n          <th style=\"text-align: center; width: 120px;\">Plays</th>\n          <th style=\"text-align: center; width: 120px;\">Players</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${machinesTable}\n      </tbody>\n    </table>\n\n    ${moversSection}\n    \n    <h2>🥇 Current Leaderboard (Top 10)</h2>\n    <p style=\"color: #666; margin-top: -10px;\">🟢 = Active this week</p>\n    <table>\n      <thead>\n        <tr>\n          <th style=\"width: 50px;\">Rank</th>\n          <th>Player</th>\n          <th style=\"text-align: right; width: 120px;\">Score</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${leaderboardTable}\n      </tbody>\n    </table>\n    \n    <div class=\"footer\">\n      <p><strong>Total Program Stats Since Launch</strong></p>\n      <p>${stats.total_players_ever} Total Players | ${stats.total_scores_ever.toLocaleString()} Total Scores</p>\n      <p>Program Started: ${new Date(stats.first_score_date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</p>\n      <p style=\"margin-top: 20px;\">Pinball Analytics System | Automated Weekly Report</p>\n    </div>\n  </div>\n</body>\n</html>\n`;\n\nreturn [{ \n  json: { \n    subject: `🎮 Weekly Pinball Report: ${reportStart} - ${reportEnd}`,\n    html: htmlBody,\n    stats: stats\n  } \n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1300, 350],
      "name": "Build Weekly Email",
      "id": "weekly-email-001"
    },
    {
      "parameters": {
        "sendTo": "bar-owner@example.com",
        "subject": "={{ $json.subject }}",
        "emailType": "html",
        "message": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [1520, 350],
      "name": "Send to Bar Owner",
      "id": "weekly-send-001",
      "credentials": {
        "gmailOAuth2": {
          "id": "OF6yDXch5kgNOSlx",
          "name": "Gmail account"
        }
      }
    }
  ],
  "connections": {
    "Every Monday at 9 AM": {
      "main": [
        [
          {
            "node": "Get Weekly Stats",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Weekly Stats": {
      "main": [
        [
          {
            "node": "Get Top Active Players",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Popular Machines",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Current Leaderboard",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Biggest Movers",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Top Active Players": {
      "main": [
        [
          {
            "node": "Merge 1-2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Popular Machines": {
      "main": [
        [
          {
            "node": "Merge 1-2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Get Current Leaderboard": {
      "main": [
        [
          {
            "node": "Merge 3-4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Biggest Movers": {
      "main": [
        [
          {
            "node": "Merge 3-4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge 1-2": {
      "main": [
        [
          {
            "node": "Merge All",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge 3-4": {
      "main": [
        [
          {
            "node": "Merge All",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge All": {
      "main": [
        [
          {
            "node": "Build Weekly Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Build Weekly Email": {
      "main": [
        [
          {
            "node": "Send to Bar Owner",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "weekly-owner-report-v2",
  "meta": {
    "templateCredsSetupCompleted": false
  },
  "tags": []
}

{
  "name": "Notes Ingestion from Google Drive - Recursive Polling (Supabase/Postgres SaaS)",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [
        -2704,
        608
      ],
      "id": "60498996-ba02-4616-b062-5bdb55ff10e4",
      "name": "Every 5 Minutes (Recursive)",
      "webhookId": "notes-ingestion-schedule"
    },
    {
      "parameters": {
        "operation": "search"
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2320,
        416
      ],
      "id": "af10ab01-7ca2-4c3d-91f5-65a50ed0da52",
      "name": "Google Drive Recursive Search",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6QfJYzLNHV66d8o",
          "name": "Google Drive account - UnfortunateDeLay"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2256,
        608
      ],
      "id": "e7e1b5a7-74de-45de-b2c2-17cbe060aef8",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "263e6e5e-a214-43e6-9729-de52a01dc6d0",
              "name": "file_id",
              "value": "={{ $json.id }}",
              "type": "string"
            },
            {
              "id": "c6a2bde6-b4f4-4523-bbeb-12f5141807b3",
              "name": "file_name",
              "value": "={{ $json.name }}",
              "type": "string"
            },
            {
              "id": "7eaabe7e-9e72-4048-b388-23ed0147f277",
              "name": "mime_type",
              "value": "={{ $json.mimeType }}",
              "type": "string"
            },
            {
              "id": "a17d6c54-127b-4e38-8648-d88a65eb59d2",
              "name": "size",
              "value": "={{ $json.size }}",
              "type": "string"
            },
            {
              "id": "3f55b007-bba0-4969-9a41-5ba1b534cf1b",
              "name": "web_view_link",
              "value": "={{ $json.webViewLink }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1936,
        464
      ],
      "id": "67c4a3da-8804-44a6-9b11-fbae28f64941",
      "name": "Set File ID"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT file_id FROM notes_knowledge_base WHERE file_id = '{{ $node['Set File ID'].json['file_id'] }}'",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1808,
        288
      ],
      "id": "0af0395a-6432-4f9b-994a-173e5cd45244",
      "name": "Check for Duplicates",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $node['Set File ID'].json['size'] !== undefined ? $node['Set File ID'].json['size'] : 0 }}",
              "value2": 50000000
            }
          ],
          "string": [
            {
              "value1": "={{ ['application/pdf', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'application/msword', 'text/plain', 'text/csv','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet','application/vnd.google-apps.document', 'application/vnd.google-apps.spreadsheet','application/rtf', 'text/markdown'].includes($node['Set File ID'].json['mime_type']) }}",
              "operation": "contains",
              "value2": "={{true}}"
            }
          ]
        }
      },
      "name": "Validate File",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -2048,
        304
      ],
      "id": "fe7c5912-d06e-485e-9c86-b6c267d9babc"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "b610b37f-e89a-4e51-aa31-97f0a994ea30",
              "leftValue": "={{ $node['Check for Duplicates'].json.file_id }}",
              "rightValue": 0,
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1600,
        288
      ],
      "id": "3458dae9-f736-471f-9e2a-7c90c4ef6ca7",
      "name": "IF Duplicate Check"
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "notes_documents",
        "filterType": "string",
        "filterString": "=metadata->>file_id=like.*{{ $('Set File ID').item.json.file_id }}*"
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1440,
        560
      ],
      "id": "4c96d1a5-40f3-4c7b-a867-227b6ff32a7f",
      "name": "Delete Old Documents",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "p6YrrNMRzxM6txue",
          "name": "Online Supabase SaaS"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "notes_document_rows",
        "filters": {
          "conditions": [
            {
              "keyName": "document_id",
              "condition": "eq",
              "keyValue": "={{ $('Set File ID').item.json.file_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1264,
        560
      ],
      "id": "6ae19f64-652d-4607-ae98-4183e68f692e",
      "name": "Delete Old Data Rows",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "p6YrrNMRzxM6txue",
          "name": "Online Supabase SaaS"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Set File ID').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -896,
        560
      ],
      "id": "1f9dd121-809a-46e6-9442-872d43c32351",
      "name": "Download File",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6QfJYzLNHV66d8o",
          "name": "Google Drive account - UnfortunateDeLay"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "=application/pdf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6f5074e4-26e8-482b-a0e9-53c942b18e8f"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "PDF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9e5b9b03-448c-4545-9d7a-467924f6d227",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "=text/plain",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "TXT"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "2ebd0def-50c6-4a9b-be04-565f177f8148",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "application/vnd.google-apps.spreadsheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "CSV"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "9a3c1c15-1c8e-485c-8c03-4697348d4287",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "XLSX"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "870331b8-60b9-4d1a-a816-458244cf9977",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "=application/rtf",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "RTF"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8d28ee23-ae49-48b0-b872-bca687d5dd2c",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "application/vnd.google-apps.document",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "DOCX"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "md-condition",
                    "leftValue": "={{ $('Set File ID').item.json.mime_type }}",
                    "rightValue": "text/markdown",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "MD"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -656,
        512
      ],
      "id": "119d102c-ed73-4a81-a39c-d0f8e26dfe84",
      "name": "Switch by File Type"
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "6f028cdc-8b48-43e8-bd3c-f90952297428",
      "name": "Extract from PDF",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        208
      ],
      "id": "78899c86-4cb9-4e06-9207-2e57cc9165a1",
      "name": "Extract from TXT",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -448,
        400
      ],
      "id": "86d0c4e6-2480-4d8e-ae43-c0f569113260",
      "name": "Extract from CSV",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "xlsx",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -448,
        800
      ],
      "id": "254a9eec-00e7-46ab-87c8-ddf2fdd579e7",
      "name": "Extract from XLSX",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "rtf",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        992
      ],
      "id": "141974a7-b31a-4ed5-a526-5fc7215c8791",
      "name": "Extract from RTF",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        1184
      ],
      "id": "319e0631-7f9a-4707-8580-106778a55182",
      "name": "Extract from DOCX",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "operation": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        0,
        1392
      ],
      "id": "5266de41-9112-4cca-bf0d-507412bd3886",
      "name": "Extract from Markdown",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://192.168.86.10:11434/api/embeddings",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "nomic-embed-text:latest"
            },
            {
              "name": "prompt",
              "value": "={{ $json.data || $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        368,
        480
      ],
      "id": "b608f358-3aec-4c97-ab78-3cfb47b58521",
      "name": "Get Ollama Embedding"
    },
    {
      "parameters": {
        "jsCode": "// Split text into chunks and prepare for embedding\nfunction splitTextIntoChunks(text, chunkSize = 500, overlap = 50) {\n  const chunks = [];\n  let start = 0;\n  \n  while (start < text.length) {\n    const end = Math.min(start + chunkSize, text.length);\n    chunks.push(text.substring(start, end));\n    start = end - overlap;\n    \n    if (start >= text.length - overlap) break;\n  }\n  \n  return chunks;\n}\n\nconst results = [];\n\nfor (const item of $input.all()) {\n  const fileContent = item.json.data || item.json.text || '';\n  const fileInfo = $('Set File ID').item.json;\n  \n  if (!fileContent) continue;\n  \n  const chunks = splitTextIntoChunks(fileContent, 500, 50);\n  \n  chunks.forEach((chunk, index) => {\n    results.push({\n      json: {\n        content: chunk,\n        chunk_index: index,\n        total_chunks: chunks.length,\n        file_id: fileInfo.file_id,\n        file_name: fileInfo.file_name,\n        file_path: fileInfo.web_view_link,\n        last_modified: new Date().toISOString()\n      }\n    });\n  });\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        480
      ],
      "id": "be3efecc-2b69-4251-b312-f76a5a0dc09a",
      "name": "Chunk Text"
    },
    {
      "parameters": {
        "jsCode": "// Prepare documents for Supabase insertion\nconst results = [];\n\nfor (const item of $input.all()) {\n  const embedding = item.json.embedding;\n  const chunkData = $('Chunk Text').all()[results.length].json;\n  \n  results.push({\n    json: {\n      content: chunkData.content,\n      embedding: JSON.stringify(embedding),\n      metadata: {\n        file_id: chunkData.file_id,\n        file_name: chunkData.file_name,\n        file_path: chunkData.file_path,\n        last_modified: chunkData.last_modified,\n        chunk_index: chunkData.chunk_index,\n        total_chunks: chunkData.total_chunks\n      }\n    }\n  });\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        528,
        480
      ],
      "id": "65597826-2fb7-4cf0-bb38-44733a4dd477",
      "name": "Prepare Documents"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO notes_documents (content, embedding, metadata) VALUES ('{{ $json.content.replace(/'/g, \"''\") }}', '{{ $json.embedding }}'::vector, '{{ JSON.stringify($json.metadata).replace(/'/g, \"''\") }}'::jsonb)",
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        704,
        480
      ],
      "id": "b2ef42aa-5173-4562-9916-a128f1c52553",
      "name": "Insert into notes_documents",
      "credentials": {
        "postgres": {
          "id": "Vmd7ZQMq0rJMfdhw",
          "name": "Online Supabase - Postgres Account"
        }
      }
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        -224,
        560
      ],
      "id": "163a77a0-ac87-401e-af87-eb395a214aa2",
      "name": "Aggregate CSV/Excel",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "fieldsToSummarize": {
          "values": [
            {
              "aggregation": "concatenate",
              "field": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.summarize",
      "typeVersion": 1.1,
      "position": [
        0,
        560
      ],
      "id": "990f86d7-c871-4e2b-97f0-fa66460ee12a",
      "name": "Summarize"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "notes_document_rows",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "document_id": "={{ $('Set File ID').item.json.file_id }}",
            "row_data": "={{ $json.toJsonString().replaceAll(/'/g,\"''\") }}"
          },
          "matchingColumns": [],
          "schema": []
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -224,
        768
      ],
      "id": "7f445f60-4f41-42d1-baf2-e4f138f93fa0",
      "name": "Insert Table Rows",
      "alwaysOutputData": true,
      "credentials": {
        "postgres": {
          "id": "cDet4ulNrQr7JVZq",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "notes_document_metadata",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "title": "={{ $('Set File ID').item.json.file_name }}",
            "url": "={{ $('Set File ID').item.json.web_view_link }}",
            "created_at": "={{ new Date().toISOString() }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": []
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -1088,
        560
      ],
      "id": "ab949c88-fb12-42a2-a535-137d9f97b3aa",
      "name": "Insert Metadata",
      "credentials": {
        "postgres": {
          "id": "Vmd7ZQMq0rJMfdhw",
          "name": "Online Supabase - Postgres Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "upsert",
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "notes_knowledge_base",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id": "={{ $('Set File ID').item.json.file_id }}",
            "file_id": "={{ $('Set File ID').item.json.file_id }}",
            "file_name": "={{ $json.title }}",
            "file_type": "={{ $('Set File ID').item.json.mime_type }}",
            "file_url": "={{ $json.url }}",
            "upload_date": "={{ new Date().toISOString() }}"
          },
          "matchingColumns": [
            "id"
          ],
          "schema": []
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        -864,
        784
      ],
      "id": "99147919-0abd-4096-aa97-6dcd15a081dc",
      "name": "Insert Knowledge Base",
      "credentials": {
        "postgres": {
          "id": "Vmd7ZQMq0rJMfdhw",
          "name": "Online Supabase - Postgres Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b1e837cb-9b71-40a4-b0ce-0b9b985327d3",
              "name": "error_type",
              "value": "Invalid File Type",
              "type": "string"
            },
            {
              "name": "file_id",
              "value": "={{ $node['Set File ID'].json.file_id }}",
              "type": "string"
            },
            {
              "name": "file_name",
              "value": "={{ $node['Set File ID'].json.file_name }}",
              "type": "string"
            },
            {
              "name": "mime_type",
              "value": "={{ $node['Set File ID'].json.mime_type }}",
              "type": "string"
            },
            {
              "name": "size",
              "value": "={{ $node['Set File ID'].json.size }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -2000,
        784
      ],
      "id": "c2bbc22c-c39a-4998-b61c-73830d680051",
      "name": "Set Error Type"
    },
    {
      "parameters": {
        "tableId": "notes_error_log",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "error_type",
              "fieldValue": "={{ $json.error_type }}"
            },
            {
              "fieldId": "file_name",
              "fieldValue": "={{ $json.file_name }}"
            },
            {
              "fieldId": "mime_type",
              "fieldValue": "={{ $json.mime_type }}"
            },
            {
              "fieldId": "file_size",
              "fieldValue": "={{ $json.size }}"
            },
            {
              "fieldId": "file_id",
              "fieldValue": "={{ $json.file_id }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1840,
        784
      ],
      "id": "e85aad3c-a9e8-4757-9a77-69e60a015312",
      "name": "Error Logger",
      "credentials": {
        "supabaseApi": {
          "id": "p6YrrNMRzxM6txue",
          "name": "Online Supabase SaaS"
        }
      }
    },
    {
      "parameters": {
        "tableId": "notes_error_log",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "error_type",
              "fieldValue": "Duplicate file"
            },
            {
              "fieldId": "file_name",
              "fieldValue": "={{ $node['Set File ID'].json['file_name'] }}"
            },
            {
              "fieldId": "file_id",
              "fieldValue": "={{ $node['Set File ID'].json['file_id'] }}"
            },
            {
              "fieldId": "timestamp",
              "fieldValue": "={{ new Date().toISOString() }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -1408,
        272
      ],
      "id": "47848cb8-4a0d-41a1-ae72-56881464c36c",
      "name": "Log Duplicate",
      "credentials": {
        "supabaseApi": {
          "id": "p6YrrNMRzxM6txue",
          "name": "Online Supabase SaaS"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "spam@thedelay.com",
        "subject": "Notes Ingestion Error",
        "emailType": "text",
        "message": "Error processing file:\n\nFile: {{ $json.file_name }}\nType: {{ $json.error_type }}\nMIME: {{ $json.mime_type }}\n\nCheck the notes_error_log table for details.",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1648,
        784
      ],
      "id": "06935ac7-02b0-4c8e-a3df-2345151e96f7",
      "name": "Error Notification",
      "webhookId": "da939aa4-8201-4978-9473-d5bea9c57e98",
      "credentials": {
        "gmailOAuth2": {
          "id": "OF6yDXch5kgNOSlx",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "spam@thedelay.com",
        "subject": "Duplicate File Detected",
        "emailType": "text",
        "message": "Duplicate file detected and updated:\n\nFile: {{ $node['Set File ID'].json.file_name }}\nID: {{ $node['Set File ID'].json.file_id }}\n\nOld data has been replaced.",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1216,
        272
      ],
      "id": "dd3a5f80-68fa-4a5c-afce-693e0b7d3174",
      "name": "Duplicate Notification",
      "webhookId": "17d01fd2-44f2-403e-8f63-138c393bc91f",
      "credentials": {
        "gmailOAuth2": {
          "id": "OF6yDXch5kgNOSlx",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "={{ $('Prepare Query').first().json.finalGqlQuery }}",
        "returnAll": true,
        "filter": {},
        "options": {
          "fields": [
            "id",
            "name",
            "mimeType",
            "webViewLink"
          ]
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -2464,
        656
      ],
      "id": "392b8d86-f282-4a29-8b09-183926ecfb08",
      "name": "Search files and folders",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "h6QfJYzLNHV66d8o",
          "name": "Google Drive account - UnfortunateDeLay"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Define the components of the working query\nconst targetFolderId = '1K8mzNnRC42Sbd3SNT2XcbppP1iVBP3sI';\n// Reference the variable passed explicitly from the 'Set Last Run Date' node\nconst lastRun = $input.item.json.lastRunDate; \nconst defaultDate = '1970-01-01T00:00:00.000Z';\n\n// Fallback date: 1970-01-01T00:00:00.000Z\n// We must convert the input string back to a Date object to use toISOString()\nconst incrementalDate = lastRun \n    ? new Date(lastRun).toISOString() \n    : defaultDate;\n\n// Construct the full, clean GQL string using the single quotes Google requires\n// This query incorporates the recursive search and necessary filters.\nconst finalGqlQuery = `'${targetFolderId}' in parents and trashed = false and mimeType != 'application/vnd.google-apps.folder' and modifiedTime > '${incrementalDate}'`;\n\nreturn [{\n    json: {\n        searchQuery: finalGqlQuery\n    }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2576,
        464
      ],
      "id": "ee1605c0-ae05-43d7-a6cd-3eb5a10d9009",
      "name": "Prepare Query"
    }
  ],
  "pinData": {
    "Prepare Query": [
      {
        "json": {
          "searchQuery": "'1K8mzNnRC42Sbd3SNT2XcbppP1iVBP3sI' in parents and trashed = false and mimeType != 'application/vnd.google-apps.folder' and modifiedTime > '1970-01-01T00:00:00.000Z'"
        }
      }
    ]
  },
  "connections": {
    "Every 5 Minutes (Recursive)": {
      "main": [
        [
          {
            "node": "Prepare Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive Recursive Search": {
      "main": [
        []
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Set File ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set File ID": {
      "main": [
        [
          {
            "node": "Validate File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Error Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate File": {
      "main": [
        [
          {
            "node": "Check for Duplicates",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Duplicates": {
      "main": [
        [
          {
            "node": "IF Duplicate Check",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Duplicate Check": {
      "main": [
        [
          {
            "node": "Log Duplicate",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete Old Documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Documents": {
      "main": [
        [
          {
            "node": "Delete Old Data Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete Old Data Rows": {
      "main": [
        [
          {
            "node": "Insert Metadata",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Metadata": {
      "main": [
        [
          {
            "node": "Download File",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Knowledge Base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download File": {
      "main": [
        [
          {
            "node": "Switch by File Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch by File Type": {
      "main": [
        [
          {
            "node": "Extract from PDF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from TXT",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from CSV",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from XLSX",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from RTF",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from DOCX",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Extract from Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from PDF": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from TXT": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from RTF": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from DOCX": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from Markdown": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chunk Text": {
      "main": [
        [
          {
            "node": "Get Ollama Embedding",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Ollama Embedding": {
      "main": [
        [
          {
            "node": "Prepare Documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Documents": {
      "main": [
        [
          {
            "node": "Insert into notes_documents",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert into notes_documents": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from CSV": {
      "main": [
        [
          {
            "node": "Aggregate CSV/Excel",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from XLSX": {
      "main": [
        [
          {
            "node": "Aggregate CSV/Excel",
            "type": "main",
            "index": 0
          },
          {
            "node": "Insert Table Rows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate CSV/Excel": {
      "main": [
        [
          {
            "node": "Summarize",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Summarize": {
      "main": [
        [
          {
            "node": "Chunk Text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert Table Rows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Error Type": {
      "main": [
        [
          {
            "node": "Error Logger",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Error Logger": {
      "main": [
        [
          {
            "node": "Error Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Duplicate": {
      "main": [
        [
          {
            "node": "Duplicate Notification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Query": {
      "main": [
        [
          {
            "node": "Search files and folders",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "07a0c1f3-eff9-4141-ba09-4e3ab82a295e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "100235c335eb882bd7dc4dc3e300e2d9d5c5fc73acdec7489046f5d3aa6adf7f"
  },
  "id": "n9UPt70FTYzcsxhE",
  "tags": []
}